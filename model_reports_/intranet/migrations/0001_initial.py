# Generated by Django 2.1.3 on 2018-12-08 04:54

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountLines',
            fields=[
                ('accountlines_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('accounttype', models.CharField(choices=[('F', 'Fine levied'), ('FU', 'Overdue Fine'), ('N', 'New Card'), ('FOR', 'Forgiven'), ('FFOR', 'Forgiven Overdue Fine'), ('M', 'Sundry'), ('PAY', 'Payment'), ('REP', 'Replacement Charge'), ('RES', 'Reserve Charge'), ('W', 'Written off'), ('RENT', 'Rental Charge')], max_length=4)),
                ('manager_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AccountOffsets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amountoutstanding', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='ActionLogs',
            fields=[
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('module', models.CharField(choices=[('CATALOGING', 'Cataloguing'), ('CIRCULATION', 'Circulation'), ('PATRONS', 'Patrons'), ('SYSTEMPREFERENCES', 'System Preferences'), ('FINES', 'Fines'), ('REPORT', 'Report'), ('TOOLS', 'Tools'), ('CALENDAR', 'Holiday Calendar')], max_length=17)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('ADDCHILD', 'Add child record'), ('MODCHILD', 'Modify child record'), ('DELCHILD', 'Delete child record'), ('MODIFY', 'Modify or edit record'), ('ISSUE', 'Issue'), ('RETURN', 'Return'), ('RENEW', 'Renew'), ('DELETE', 'Delete'), ('CHANGE PASS', 'Change Password Through OPAC'), ('RESERVE', 'Reserve'), ('FINE', 'Collect fine'), ('WRITEOFF', 'Write off fine'), ('RUN', 'Run report'), ('RENEWSELF', 'Renew self'), ('RESERVESELF', 'Reserve self')], max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('firstname', 'lastname'),
            },
        ),
        migrations.CreateModel(
            name='Biblio',
            fields=[
                ('biblionumber', models.AutoField(primary_key=True, serialize=False)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, verbose_name='ISBN')),
                ('callnumber', models.CharField(blank=True, max_length=15, null=True)),
                ('title', models.CharField(max_length=250)),
                ('edition', models.CharField(blank=True, max_length=50, null=True)),
                ('copyrightdate', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('series', models.CharField(blank=True, max_length=250, null=True)),
                ('volume', models.CharField(blank=True, max_length=20, null=True)),
                ('pages', models.CharField(max_length=10)),
                ('size', models.CharField(blank=True, max_length=5, null=True)),
                ('contents_url', models.URLField(blank=True, null=True)),
                ('index_url', models.URLField(blank=True, null=True)),
                ('itemtype', models.CharField(choices=[('BK', 'Book'), ('PR', 'Project Report'), ('TD', 'Theses'), ('XM', 'Xerox Material'), ('RB', 'Reference Book')], default='BK', max_length=2)),
                ('totalissues', models.IntegerField(blank=True, default=0, null=True)),
                ('timestamp_lastupdated', models.DateTimeField(auto_now=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
                ('authors', models.ManyToManyField(blank=True, to='intranet.Authors', verbose_name='authors')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='BiblioImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mimetype', models.CharField(max_length=15)),
                ('imagefile', models.BinaryField()),
                ('biblionumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Biblio')),
            ],
        ),
        migrations.CreateModel(
            name='Borrowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('cardnumber', models.CharField(max_length=16, unique=True)),
                ('surname', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=100)),
                ('mobile', models.CharField(blank=True, max_length=32, null=True)),
                ('dateenrolled', models.DateField(auto_now_add=True)),
                ('dateexpiry', models.DateField()),
                ('gonenoaddress', models.BooleanField(default=False)),
                ('lost', models.BooleanField(default=False)),
                ('debarred', models.DateField(blank=True, null=True)),
                ('debarredcomment', models.CharField(blank=True, max_length=100, null=True)),
                ('borrowernote', models.CharField(blank=True, max_length=255, null=True)),
                ('opacnote', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp_lastupdated', models.DateTimeField(auto_now=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
                ('borrower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorycode', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionDepartments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deptcode', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=100)),
                ('approved', models.NullBooleanField()),
                ('date_moderated', models.DateTimeField(auto_now_add=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Borrowers')),
                ('biblionumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Biblio')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deptcode', models.CharField(max_length=10, unique=True)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Designations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EntryExitLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardnumber', models.CharField(max_length=16, unique=True)),
                ('timeofentry', models.DateTimeField(auto_now_add=True)),
                ('timeofexit', models.DateTimeField(blank=True, null=True)),
                ('borrower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the topic', max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('isexception', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=100)),
                ('holiday_type', models.CharField(choices=[('WEEKEND', 'Weekend holiday'), ('YEARLY', 'Yearly holidays on the same day'), ('ADHOC', 'Adhoc holidays')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_due', models.DateTimeField()),
                ('issuedate', models.DateTimeField(default=django.utils.timezone.now)),
                ('renewals', models.PositiveSmallIntegerField(default=0)),
                ('returndate', models.DateTimeField(blank=True, null=True)),
                ('returned', models.BooleanField(default=False)),
                ('timestamp_lastupdated', models.DateTimeField(auto_now=True)),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
        ),
        migrations.CreateModel(
            name='IssuingRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(choices=[('BK', 'Book'), ('PR', 'Project Report'), ('TD', 'Theses'), ('XM', 'Xerox Material'), ('RB', 'Reference Book')], default='BK', max_length=2)),
                ('maxissueqty', models.PositiveSmallIntegerField()),
                ('issuelength', models.PositiveSmallIntegerField()),
                ('renewalsallowed', models.PositiveSmallIntegerField(default=0)),
                ('reservesallowed', models.PositiveSmallIntegerField(default=0)),
                ('overduefinescap', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('rentaldiscount', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('fine', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('finedays', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('chargeperiod', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('categorycode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Categories')),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('itemnumber', models.AutoField(primary_key=True, serialize=False)),
                ('barcode', models.CharField(max_length=25, unique=True)),
                ('dateaccessioned', models.DateField(default=django.utils.timezone.now)),
                ('booksellerid', models.CharField(blank=True, max_length=25, null=True)),
                ('invoicenumber', models.CharField(blank=True, max_length=15, null=True)),
                ('invoicedate', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('totalissues', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('itemstatus', models.CharField(choices=[('AV', 'Available'), ('OL', 'On Loan'), ('DM', 'Damaged'), ('LO', 'Lost'), ('LP', 'Lost and Paid for'), ('MI', 'Missing'), ('WD', 'Withdrawn'), ('BD', 'In Bindery')], default='AV', max_length=2)),
                ('location', models.CharField(choices=[('GEN', 'General Shelf'), ('REF', 'Reference Shelf'), ('OD', 'On-Display'), ('PROC', 'Processing Center'), ('SO', 'Staff Office'), ('BC', 'Book Cart'), ('NMS', 'New Materials Shelf')], default='GEN', max_length=4)),
                ('notforloan', models.CharField(blank=True, choices=[('1', 'Not for loan'), ('2', 'Staff Copy'), ('3', 'Ordered')], max_length=1, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('replacementprice', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('timestamp_lastupdated', models.DateTimeField(auto_now=True)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
                ('biblionumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Biblio')),
                ('collectiondepartment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.CollectionDepartments')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the book's natural language (e.g. English, French, Japanese etc.)", max_length=30, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LocalCoverImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageurl', models.FileField(upload_to='images/localcoverimages')),
                ('biblionumber', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='intranet.Biblio')),
            ],
        ),
        migrations.CreateModel(
            name='ModeratorReasons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('reason',),
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('language', models.CharField(max_length=25)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('expirationdate', models.DateField(blank=True, null=True)),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='PatronImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mimetype', models.CharField(max_length=15)),
                ('imagefile', models.BinaryField()),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
        ),
        migrations.CreateModel(
            name='PatronPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageurl', models.FileField(upload_to='images/patronimages')),
                ('patron', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
            options={
                'ordering': ['patron__cardnumber'],
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Quotations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255)),
                ('text', models.CharField(max_length=1500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RentalCharges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemtype', models.CharField(choices=[('BK', 'Book'), ('PR', 'Project Report'), ('TD', 'Theses'), ('XM', 'Xerox Material'), ('RB', 'Reference Book')], max_length=2)),
                ('rentalcharge', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reserves',
            fields=[
                ('reserveid', models.AutoField(primary_key=True, serialize=False)),
                ('reservedate', models.DateTimeField(auto_now_add=True)),
                ('cancellationdate', models.DateTimeField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('found', models.BooleanField(default=False)),
                ('notificationdate', models.DateTimeField(blank=True, null=True)),
                ('waitingdate', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('biblionumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Biblio')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='intranet.Items')),
            ],
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_desc', models.CharField(max_length=255)),
                ('query_url', models.CharField(max_length=1000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usercardnumber', models.CharField(max_length=16)),
                ('typecode', models.CharField(choices=[('ISSUE', 'issue'), ('RETURN', 'return'), ('RENEW', 'renew'), ('PAYMENT', 'payment')], max_length=7)),
                ('value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Items')),
            ],
        ),
        migrations.CreateModel(
            name='Stopwords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('suggestionid', models.AutoField(primary_key=True, serialize=False)),
                ('suggesteddate', models.DateTimeField(auto_now_add=True, null=True)),
                ('acceptedby', models.IntegerField(blank=True, null=True)),
                ('accepteddate', models.DateTimeField(blank=True, null=True)),
                ('rejectedby', models.IntegerField(blank=True, null=True)),
                ('rejecteddate', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ASKED', 'User asked'), ('ACCEPTED', 'Suggestion has been accepted'), ('REJECTED', 'Suggestion has been rejected')], default='ASKED', max_length=8)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=255)),
                ('copyrightdate', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('publishercode', models.CharField(blank=True, max_length=100, null=True)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.ModeratorReasons')),
                ('suggestedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('suggestionid', models.AutoField(primary_key=True, serialize=False)),
                ('suggesteddate', models.DateField(auto_now_add=True, null=True)),
                ('acceptedby', models.CharField(blank=True, max_length=16, null=True)),
                ('accepteddate', models.DateField(auto_now_add=True, null=True)),
                ('rejectedby', models.CharField(blank=True, max_length=16, null=True)),
                ('rejecteddate', models.DateField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('ASKED', 'User asked'), ('ACCEPTED', 'Suggestion has been accepted'), ('REJECTED', 'Suggestion has been rejected')], default='ASKED', max_length=8)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=255)),
                ('copyrightdate', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('publishercode', models.CharField(blank=True, max_length=100, null=True)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.ModeratorReasons')),
                ('suggestedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers')),
            ],
        ),
        migrations.CreateModel(
            name='SystemPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.CharField(max_length=50, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('options', models.CharField(max_length=255)),
                ('descriptive_options', models.CharField(max_length=1000)),
                ('explanation', models.CharField(max_length=255)),
                ('vartype', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('approved', models.NullBooleanField()),
                ('date_moderated', models.DateTimeField(auto_now_add=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Borrowers')),
                ('biblionumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Biblio')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='news',
            unique_together={('title', 'number')},
        ),
        migrations.AddField(
            model_name='issues',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Items'),
        ),
        migrations.AddField(
            model_name='borrowers',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Categories'),
        ),
        migrations.AddField(
            model_name='borrowers',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Departments'),
        ),
        migrations.AddField(
            model_name='borrowers',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Designations'),
        ),
        migrations.AddField(
            model_name='biblio',
            name='corporateauthor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.CorporateAuthor'),
        ),
        migrations.AddField(
            model_name='biblio',
            name='genre',
            field=models.ManyToManyField(blank=True, to='intranet.Genre', verbose_name='Topical Term'),
        ),
        migrations.AddField(
            model_name='biblio',
            name='language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Language'),
        ),
        migrations.AddField(
            model_name='biblio',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='intranet.Publisher', verbose_name='Publication details'),
        ),
        migrations.AlterUniqueTogether(
            name='authors',
            unique_together={('firstname', 'lastname')},
        ),
        migrations.AddField(
            model_name='actionlogs',
            name='usercode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers'),
        ),
        migrations.AddField(
            model_name='accountoffsets',
            name='borrower',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers'),
        ),
        migrations.AddField(
            model_name='accountlines',
            name='borrower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Borrowers'),
        ),
        migrations.AddField(
            model_name='accountlines',
            name='itemnumber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Items'),
        ),
        migrations.AlterUniqueTogether(
            name='tags',
            unique_together={('tag', 'biblionumber')},
        ),
        migrations.AlterUniqueTogether(
            name='suggestion',
            unique_together={('title', 'suggestedby')},
        ),
        migrations.AlterUniqueTogether(
            name='issuingrules',
            unique_together={('categorycode', 'itemtype')},
        ),
        migrations.AlterUniqueTogether(
            name='issues',
            unique_together={('borrower', 'item', 'returned')},
        ),
        migrations.AlterUniqueTogether(
            name='comments',
            unique_together={('comment', 'biblionumber')},
        ),
    ]
