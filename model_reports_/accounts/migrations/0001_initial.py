# Generated by Django 2.1.3 on 2018-12-08 04:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('fullname', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True, verbose_name='is_active')),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('edit_biblio_batchmode', 'Can perorm batch catalog modifications - ILS'), ('bulk_import_cover_images', 'Can bulk import local cover images - ILS'), ('bulk_import_patron_images', 'Can bulk import patron photographs - ILS'), ('backup_restore', 'Can perform system backup & restore - ILS'), ('borrow', 'Can borrow - ILS'), ('circulate_place_holds', 'Can circulate & place holds - ILS'), ('collect_fines_fees', 'Can collect fines & fees - ILS'), ('delete_anonymize_patrons', 'Can delete old borrowers - ILS'), ('edit_calendar', 'Can set calendar - ILS'), ('edit_biblio', 'Can edit catalog - ILS'), ('edit_items', 'Can edit items data - ILS'), ('edit_news', 'Can write news - ILS'), ('edit_patrons', 'Can edit performs data - ILS'), ('edit_quotations', 'Can edit quotes - ILS'), ('execute_reports', 'Can run reports - ILS'), ('bulk_export_catalog', 'Can bulk export catalog & items data - ILS'), ('force_checkout', 'Can force checkout to restricted borrowers - ILS'), ('bulk_import_catalog', 'Can bulk import catalog & items data - ILS'), ('bulk_import_patrons', 'Can bulk import patrons data - ILS'), ('edit_items_batchmode', 'Can perform batch item modifications - ILS'), ('manage_circ_rules', 'Can manage circulation rules - ILS'), ('manage_restrictions', 'Can manage account restrictions - ILS'), ('manage_system_preferences', 'Can manage system preferences - ILS'), ('moderate_comments', 'Can moderate user comments - ILS'), ('moderate_suggestions', 'Can moderate user suggestions - ILS'), ('moderate_tags', 'Can moderate user tags - ILS'), ('modify_holds_priority', 'Can modify hold priority - ILS'), ('edit_patrons_batchmode', 'Can perform batch patron modifications - ILS'), ('run_confidential_reports', 'Can run confidential reports - ILS'), ('upload_local_cover_images', 'Can upload local cover images - ILS'), ('upload_patron_images', 'Can upload patron photographs - ILS'), ('writeoff', 'Can write off fines & fees - ILS'), ('self_renew', 'Can self renew – ILS'), ('self_reserve', 'Can self reserve – ILS'), ('suggest_books', 'Can suggest books – ILS'), ('edit_genre', 'Can edit genre – ILS'), ('edit_language', 'Can edit language – ILS'), ('edit_stopwords', 'Can edit stopwords – ILS'), ('edit_authors', 'Can edit authors – ILS'), ('edit_biblioimages', 'Can_edit_biblioimages – ILS'), ('edit_rentalcharges', 'Can edit rentalcharges – ILS'), ('edit_entryexitlogs', 'Can edit entryexitlogs – ILS'), ('edit_systempreferences', 'Can edit systempreferences – ILS')),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, help_text='Roll number/aadhar numberi/employee number', max_length=16, null=True)),
                ('surname', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=50)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Ms', 'Ms'), ('Mrs', 'Mrs'), ('Sri', 'Sri'), ('Dr', 'Dr'), ('Prof', 'Prof')], default='Mr', max_length=4)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('mobile', models.CharField(max_length=32)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zipcode', models.CharField(blank=True, max_length=6, null=True)),
                ('country', models.CharField(max_length=50)),
                ('timestamp_lastupdated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
